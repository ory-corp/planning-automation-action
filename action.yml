name: "Project Board Automation"
description: "Automate GitHub Projects with ease"

inputs:
  project:
    description: Project board number
    required: true
    default: "1"
  token:
    description: GitHub Token with org:write
    required: true
  todo_label:
    description: Initial label for new issues/PRs
    required: false
    default: "needs triage"
  statusName:
    description: Name of the 'status' field on the project board
    required: false
    default: status
  statusValue:
    description: Name of the 'todo' status on the project board
    required: false
    default: todo
  includeEffort:
    description: if true, set effort
    required: false
    default: 'true'
  effortName:
    description: Name of the 'effort' field on the project board
    required: false
    default: effort
  effortMapping:
    description: |
      JSON string with map where: 
        - string key is a valid 'effort' field value
        - number value is maximum duration in days
      for example: {"two days": 2, "workweek": 5}
    required: false
    default: '{"two days": 2, "workweek": 5}'
  monthlyMilestoneName:
    description: Name of the 'monthly milestone' field on the project board
    required: false
    default: monthly milestone
  quarterlyMilestoneName:
    description: Name of the 'quarterly milestone' field on the project board
    required: false
    default: quarterly milestone

runs:
  using: "composite"
  steps:
    - name: Initial labeling - PR
      if: ${{ github.event_name == 'pull_request' }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        gh pr view ${{ github.event.pull_request.number }} --json 'assignees' | jq -e '(.assignees | length) == 0' || exit 0
        gh pr view ${{ github.event.pull_request.number }} --json 'labels' | jq -e '(.labels | length) == 0' || exit 0
        gh pr edit ${{ github.event.pull_request.number }} --add-label "${{ inputs.todo_label }}"
    - name: Initial labeling - Issue
      if: ${{ github.event_name == 'issues' }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        gh issue view ${{ github.event.pull_request.number }} --json 'assignees' | jq -e '(.assignees | length) != 0' || exit 0
        gh issue view ${{ github.event.pull_request.number }} --json 'labels' | jq -e '(.labels | length) != 0' || exit 0
        gh issue edit ${{ github.event.pull_request.number }} --add-label "${{ inputs.todo_label }}"
    - name: Fetch project data
      uses: actions/github-script@v7
      id: runscript
      with:
        github-token: ${{ inputs.token }}
        script: |
          const script = require('.github/actions/planning-automation-action/action.js')
          await script(
            github,
            context,
            core,
            ${{ inputs.project }},
            `${{ inputs.statusName }}`,
            `${{ inputs.statusValue }}`,
            ${{ inputs.includeEffort }},
            `${{ inputs.effortName }}`,
            `${{ inputs.effortMapping }}`,
            `${{ inputs.monthlyMilestoneName }}`,
            `${{ inputs.quarterlyMilestoneName }}`
          )
