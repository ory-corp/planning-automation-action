name: "Project Board Automation"
description: "Automate GitHub Projects with ease"

inputs:
  project:
    description: Project board number
    required: true
    default: "1"
  token:
    description: GitHub Token with org:write
    required: true
  todo_label:
    description: Initial label for new issues/PRs
    required: false
    default: "needs triage"
  statusName:
    description: Name of the 'status' field on the project board
    required: false
    default: status
  statusValue:
    description: Name of the 'todo' status on the project board
    required: false
    default: todo
  includeEffort:
    description: if true, set effort
    required: false
    default: 'true'
  effortName:
    description: Name of the 'effort' field on the project board
    required: false
    default: effort
  effortMapping:
    description: |
      JSON string with map where: 
        - string key is a valid 'effort' field value
        - number value is maximum duration in days
      for example: {"two days": 2, "workweek": 5}
    required: false
    default: '{"two days": 2, "workweek": 5}'
  monthlyMilestoneName:
    description: Name of the 'monthly milestone' field on the project board
    required: false
    default: monthly milestone
  quarterlyMilestoneName:
    description: Name of the 'quarterly milestone' field on the project board
    required: false
    default: quarterly milestone

runs:
  using: "composite"
  steps:
    - name: debug
      shell: bash
      run: |
        echo "${GITHUB_EVENT_PATH}"
        echo "---"
        cat "${GITHUB_EVENT_PATH}"
        echo "---"
        pwd
        echo "---"
        tree -a
    - name: Initial labeling
      uses: andymckay/labeler@e6c4322d0397f3240f0e7e30a33b5c5df2d39e90
      with:
        add-labels: "${{ inputs.todo_label }}"
        ignore-if-assigned: true
        ignore-if-labeled: true
    - name: Fetch project data
      uses: actions/github-script@v7
      id: runscript
      with:
        github-token: ${{ inputs.token }}
        script: |
          const script = require('action.js')
          await script(
            github,
            context,
            core,
            ${{ inputs.project }},
            `${{ inputs.statusName }}`,
            `${{ inputs.statusValue }}`,
            ${{ inputs.includeEffort }},
            `${{ inputs.effortName }}`,
            `${{ inputs.effortMapping }}`,
            `${{ inputs.monthlyMilestoneName }}`,
            `${{ inputs.quarterlyMilestoneName }}`
          )
